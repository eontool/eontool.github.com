<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ubuntu | Radiolab ↯]]></title>
  <link href="http://eontool.github.io/blog/categories/ubuntu/atom.xml" rel="self"/>
  <link href="http://eontool.github.io/"/>
  <updated>2013-09-02T17:35:10-07:00</updated>
  <id>http://eontool.github.io/</id>
  <author>
    <name><![CDATA[Daniel Domínguez]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Construcción de Módulos y Bloques en GNU Radio Companion]]></title>
    <link href="http://eontool.github.io/blog/2013/08/20/construccion-de-modulos-y-bloques-en-gnu-radio-companion/"/>
    <updated>2013-08-20T16:08:00-07:00</updated>
    <id>http://eontool.github.io/blog/2013/08/20/construccion-de-modulos-y-bloques-en-gnu-radio-companion</id>
    <content type="html"><![CDATA[<p>Los módulos en GNU Radio nos permiten extender la funcionalidad de la plataforma, es decir, podemos construir bloques con nuestro propio código para el procesamiento de datos y así tener mayor poder y flexibilidad.</p>

<!-- more -->


<p>Para este tutorial asumimos que completamos satistactoriamente la <a href="http://eontool.github.io/blog/2013/04/30/instalacion-gnuradio-companion-en-ubuntu/">instalación de GNU Radio Companion</a>.</p>

<p>Dentro de nuestra carpeta “grc” ejecutamos el siguiente comando:
<code>
$ git clone https://github.com/mbant/gr-modtool.git
$ cd gr-modtool
</code></p>

<p>Utilizando gr_modtool, crearemos un nuevo módulo llamado “pruebas”:
<code>
$ gr_modtool newmod
Name of the new module: pruebas
Creating out-of-tree module in ./gr-pruebas... Done.
Use 'gr_modtool add' to add a new block to this currently empty module.
</code></p>

<p>Al revisar el contenido de la carpeta "gr-modtool", vemos que se ha creado una nueva carpeta llamada “gr-pruebas”, ahora tenemos que hacer una copia el archivo "gr_moodtool.py" dentro de nuestra nueva carpeta.
<code>
$ cp gr_modtool.py gr-pruebas
$ cd gr-pruebas
</code></p>

<p>Contenido en la carpeta del modulo "gr-pruebas":
<img class="center" src="/images/posts/contenido_grc_modtool.png" title="Carpeta" alt="images"></p>

<p>Ahora vamos a crear un nuevo bloque de procesamiento:
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gr_modtool add
</span><span class='line'>GNU Radio module name identified: pruebas
</span><span class='line'>Enter code <span class="nb">type</span>: general
</span><span class='line'>Language: C++
</span><span class='line'>Enter name of block/code <span class="o">(</span>without module name prefix<span class="o">)</span>: demo
</span><span class='line'>Block/code identifier: demo
</span><span class='line'>Enter valid argument list, including default arguments:
</span><span class='line'>Add Python QA code? <span class="o">[</span>Y/n<span class="o">]</span>
</span><span class='line'>Add C++ QA code? <span class="o">[</span>y/N<span class="o">]</span>
</span><span class='line'>Adding file <span class="s1">&#39;demo_impl.h&#39;</span>...
</span><span class='line'>Adding file <span class="s1">&#39;demo_impl.cc&#39;</span>...
</span><span class='line'>Adding file <span class="s1">&#39;demo.h&#39;</span>...
</span><span class='line'>Editing swig/pruebas_swig.i...
</span><span class='line'>Adding file <span class="s1">&#39;qa_demo.py&#39;</span>...
</span><span class='line'>Editing python/CMakeLists.txt...
</span><span class='line'>Adding file <span class="s1">&#39;pruebas_demo.xml&#39;</span>...
</span><span class='line'>Editing grc/CMakeLists.txt...
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Para poder utilizar nuestro bloque es necesario editar algunas lineas. Iniciemos:</p>

<p>Editamos nuestro archivo "pruebas_demo.xml" en /gr-pruebas/grc/</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (pruebas_demo.xml)</span> <a href='/downloads/code/pruebas_demo.xml'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;block&gt;</span>
</span><span class='line'>  <span class="nt">&lt;name&gt;</span>demo<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>  <span class="nt">&lt;key&gt;</span>pruebas_demo<span class="nt">&lt;/key&gt;</span>
</span><span class='line'>  <span class="nt">&lt;category&gt;</span>pruebas<span class="nt">&lt;/category&gt;</span>
</span><span class='line'>  <span class="nt">&lt;import&gt;</span>import pruebas<span class="nt">&lt;/import&gt;</span>
</span><span class='line'>  <span class="nt">&lt;make&gt;</span>pruebas.demo($)<span class="nt">&lt;/make&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;param&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>Demo<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;key&gt;&lt;/key&gt;</span>
</span><span class='line'>    <span class="nt">&lt;type&gt;</span>int<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/param&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;sink&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>in<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;type&gt;</span>int<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/sink&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;source&gt;</span>
</span><span class='line'>    <span class="nt">&lt;name&gt;</span>out<span class="nt">&lt;/name&gt;</span>
</span><span class='line'>    <span class="nt">&lt;type&gt;</span>int<span class="nt">&lt;/type&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/source&gt;</span>
</span><span class='line'><span class="nt">&lt;/block&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Editamos el archivo "demo_impl.cc" en /gr-pruebas/lib/</p>

<p>Estas son las partes del código que modificaremos:</p>

<p>&lt;+MIN_IN+>, &lt;+MAX_IN+>, &lt;+MIN_OUT+>, &lt;+MAX_OUT+>, &lt;+ITYPE+>, &lt;+OTYPE+>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (demo_impl.cc)</span> <a href='/downloads/code/demo_impl.cc'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'><span class="cm">/* -*- c++ -*- */</span>
</span><span class='line'><span class="cm">/* </span>
</span><span class='line'><span class="cm"> * Copyright 2013 &lt;+YOU OR YOUR COMPANY+&gt;.</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * This is free software; you can redistribute it and/or modify</span>
</span><span class='line'><span class="cm"> * it under the terms of the GNU General Public License as published by</span>
</span><span class='line'><span class="cm"> * the Free Software Foundation; either version 3, or (at your option)</span>
</span><span class='line'><span class="cm"> * any later version.</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * This software is distributed in the hope that it will be useful,</span>
</span><span class='line'><span class="cm"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
</span><span class='line'><span class="cm"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
</span><span class='line'><span class="cm"> * GNU General Public License for more details.</span>
</span><span class='line'><span class="cm"> * </span>
</span><span class='line'><span class="cm"> * You should have received a copy of the GNU General Public License</span>
</span><span class='line'><span class="cm"> * along with this software; see the file COPYING.  If not, write to</span>
</span><span class='line'><span class="cm"> * the Free Software Foundation, Inc., 51 Franklin Street,</span>
</span><span class='line'><span class="cm"> * Boston, MA 02110-1301, USA.</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#ifdef HAVE_CONFIG_H</span>
</span><span class='line'><span class="cp">#include &quot;config.h&quot;</span>
</span><span class='line'><span class="cp">#endif</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;gnuradio/io_signature.h&gt;</span>
</span><span class='line'><span class="cp">#include &quot;demo_impl.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">namespace</span> <span class="n">gr</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">namespace</span> <span class="n">pruebas</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">demo</span><span class="o">::</span><span class="n">sptr</span>
</span><span class='line'>    <span class="n">demo</span><span class="o">::</span><span class="n">make</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">gnuradio</span><span class="o">::</span><span class="n">get_initial_sptr</span>
</span><span class='line'>        <span class="p">(</span><span class="k">new</span> <span class="n">demo_impl</span><span class="p">());</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * The private constructor</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">demo_impl</span><span class="o">::</span><span class="n">demo_impl</span><span class="p">()</span>
</span><span class='line'>      <span class="o">:</span> <span class="n">gr</span><span class="o">::</span><span class="n">block</span><span class="p">(</span><span class="s">&quot;demo&quot;</span><span class="p">,</span>
</span><span class='line'>              <span class="n">gr</span><span class="o">::</span><span class="n">io_signature</span><span class="o">::</span><span class="n">make</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">)),</span>
</span><span class='line'>              <span class="n">gr</span><span class="o">::</span><span class="n">io_signature</span><span class="o">::</span><span class="n">make</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">)))</span>
</span><span class='line'>    <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="cm">/*</span>
</span><span class='line'><span class="cm">     * Our virtual destructor.</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="n">demo_impl</span><span class="o">::~</span><span class="n">demo_impl</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">void</span>
</span><span class='line'>    <span class="n">demo_impl</span><span class="o">::</span><span class="n">forecast</span> <span class="p">(</span><span class="kt">int</span> <span class="n">noutput_items</span><span class="p">,</span> <span class="n">gr_vector_int</span> <span class="o">&amp;</span><span class="n">ninput_items_required</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="cm">/* &lt;+forecast+&gt; e.g. ninput_items_required[0] = noutput_items */</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kt">int</span>
</span><span class='line'>    <span class="n">demo_impl</span><span class="o">::</span><span class="n">general_work</span> <span class="p">(</span><span class="kt">int</span> <span class="n">noutput_items</span><span class="p">,</span>
</span><span class='line'>                       <span class="n">gr_vector_int</span> <span class="o">&amp;</span><span class="n">ninput_items</span><span class="p">,</span>
</span><span class='line'>                       <span class="n">gr_vector_const_void_star</span> <span class="o">&amp;</span><span class="n">input_items</span><span class="p">,</span>
</span><span class='line'>                       <span class="n">gr_vector_void_star</span> <span class="o">&amp;</span><span class="n">output_items</span><span class="p">)</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="k">const</span> <span class="kt">int</span> <span class="o">*</span><span class="n">in</span> <span class="o">=</span> <span class="p">(</span><span class="k">const</span> <span class="kt">int</span> <span class="o">*</span><span class="p">)</span> <span class="n">input_items</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>        <span class="kt">int</span> <span class="o">*</span><span class="n">out</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span> <span class="n">output_items</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Do &lt;+signal processing+&gt;</span>
</span><span class='line'>        <span class="c1">// Tell runtime system how many input items we consumed on</span>
</span><span class='line'>        <span class="c1">// each input stream.</span>
</span><span class='line'>        <span class="n">consume_each</span> <span class="p">(</span><span class="n">noutput_items</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Tell runtime system how many output items we produced.</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">noutput_items</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">}</span> <span class="cm">/* namespace pruebas */</span>
</span><span class='line'><span class="p">}</span> <span class="cm">/* namespace gr */</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Para compilar nuestro módulo y bloque creamos un directorio "build" en la carpeta gr-pruebas y dentro de el ejecutamos los siguientes comandos:</p>

<p><code>
$ mkdir build &amp;&amp; cd build
$ cmake ../
$ sudo make
$ sudo make install
$ sudo ldconfig
</code></p>

<p>Para utilizar nuestro bloque, ejecutamos gnuradio-companion y de lado derecho habrá un nuevo módulo llamado "pruebas" y dentro de este nuestro bloque "demo".</p>

<p><img class="center" src="/images/posts/gnuradio-pruebas-demo.png" title="GNU Radio" alt="images"></p>

<p>Hasta este punto hemos creado un módulo y un bloque de procesamiento, en el siguiente tutorial veremos la creación de un bloque con entradas y salidas funcionales para probarlo en GNU Radio Companion.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Instalación de GNU Radio Companion 3.7.x en Ubuntu 13.04 x64]]></title>
    <link href="http://eontool.github.io/blog/2013/04/30/instalacion-gnuradio-companion-en-ubuntu/"/>
    <updated>2013-04-30T21:58:00-07:00</updated>
    <id>http://eontool.github.io/blog/2013/04/30/instalacion-gnuradio-companion-en-ubuntu</id>
    <content type="html"><![CDATA[<p><img class="center" src="/images/posts/gnuradio_logo.png" title="GNU Radio Companion" alt="images"></p>

<p>Para este tutorial trabajaremos con la versión 13.04 x64 de Ubuntu.
Vamos a utilizar PyBOMBS (Python Build Overlay Managed Bundle System), que es un nuevo método para instalar GNU Radio que resuelve dependencias y hace más sencillo añadir proyectos out-of-tree (plugins).</p>

<!-- more -->


<p><blockquote><p>GNU Radio es una herramiente de desarrollo libre y abierta que provee bloques de procesamiento de señal para impementar sistemas de radio definida por software. Puede utilizarse con hardware de RF de bajo costo para crear radios definidas por software, o sin hardware en un ambiente de simulación. Es utilizada extensivamente por ambientes académicos, aficionados y comerciales para dar soporte a la investigación en comunicaciones inalámbricas y en sistemas de radio en el mundo real.</p><footer><strong>Wikipedia</strong> <cite><a href='http://es.wikipedia.org/wiki/GNU_Radio'>es.wikipedia.org/wiki/GNU_Radio/&hellip;</a></cite></footer></blockquote></p>

<p><img class="left" src="/images/posts/gnuradio_companion_install.png" width="600" height="400" title="GNU Radio Companion" alt="images"></p>

<p>Antes de iniciar debemos instalar GIT, para ello, abrimos una terminal y ejecutamos el siguiente comando:
<code>
$ sudo apt-get install git-core
</code></p>

<p>Creamos una carpeta llamada  “grc” en nuestro directorio “Home”:
<code>
$ mkdir grc &amp;&amp; cd grc
</code></p>

<p>Descargamos PyBOMBS:
<code>
$ git clone git://github.com/pybombs/pybombs
$ cd pybombs
</code></p>

<p>Configuramos PyBOMBS:
```
$ ./pybombs config</p>

<p>gituser =
prefix = /usr/local/
satisfy_order =
forcepkgs =
timeout =
cmakebuildtype =</p>

<p>```</p>

<p>Instalamos GNU Radio Companion:
<code>
$sudo ./pybombs install gnuradio
</code>
(Esto puede tardar algunos minutos)</p>

<p>Por último actualizamos los links hacia las recientes librerías creadas.
<code>
$ sudo ldconfig
</code></p>

<p>Ejecutamos GNU Radio Companion:
<code>
$ gnuradio-companion
</code></p>

<p>Hemos finalizado la instalación.</p>
]]></content>
  </entry>
  
</feed>
